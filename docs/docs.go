// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Delevoper",
            "url": "https://github.com/RomDmitriy"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/parse": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Парсинг git-репозитория для получения уязвимостей в lock-файлах",
                "parameters": [
                    {
                        "enum": [
                            "github"
                        ],
                        "type": "string",
                        "description": "Наименование сервиса",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Информация о пользователе и репозитории",
                        "name": "user_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gitParser.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/main.severityCounts"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "gitParser.UserInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id пользователя в БД",
                    "type": "integer"
                },
                "repo": {
                    "description": "Наименование репозитория без указания владельца",
                    "type": "string"
                },
                "repoId": {
                    "description": "Id репозитория в БД",
                    "type": "integer"
                },
                "token": {
                    "description": "Access token пользователя в сервисе git",
                    "type": "string"
                },
                "user": {
                    "description": "Имя пользователя в сервисе git",
                    "type": "string"
                }
            }
        },
        "main.severityCounts": {
            "type": "object",
            "properties": {
                "high": {
                    "type": "integer"
                },
                "low": {
                    "type": "integer"
                },
                "moderate": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:1323",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "WebScan Worker API",
	Description:      "Этот сервис ищет lock-файлы в git-репозитории и возвращает список уязвимостей из базы данных osv.dev.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
