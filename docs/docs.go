// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Delevoper",
            "url": "https://github.com/RomDmitriy"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/parse": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Парсинг git-репозитория для получения уязвимостей в lock-файлах",
                "parameters": [
                    {
                        "enum": [
                            "github",
                            "gitlab"
                        ],
                        "type": "string",
                        "description": "Наименование сервиса",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Информация о пользователе и репозитории",
                        "name": "user_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gitParser.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.VulnerabilityResults"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "gitParser.UserInfo": {
            "type": "object",
            "properties": {
                "repo": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "models.Affected": {
            "type": "object",
            "properties": {
                "database_specific": {
                    "type": "object",
                    "additionalProperties": true
                },
                "ecosystem_specific": {
                    "type": "object",
                    "additionalProperties": true
                },
                "package": {
                    "$ref": "#/definitions/models.Package"
                },
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Range"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Severity"
                    }
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.AnalysisInfo": {
            "type": "object",
            "properties": {
                "called": {
                    "type": "boolean"
                }
            }
        },
        "models.Credit": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Ecosystem": {
            "type": "string",
            "enum": [
                "Go",
                "npm",
                "OSS-Fuzz",
                "PyPI",
                "RubyGems",
                "crates.io",
                "Packagist",
                "Maven",
                "NuGet",
                "Linux",
                "Debian",
                "Alpine",
                "Hex",
                "Android",
                "GitHub Actions",
                "Pub",
                "ConanCenter",
                "Rocky Linux",
                "AlmaLinux",
                "Bitnami",
                "Photon OS",
                "CRAN",
                "Bioconductor",
                "SwiftURL"
            ],
            "x-enum-varnames": [
                "EcosystemGo",
                "EcosystemNPM",
                "EcosystemOSSFuzz",
                "EcosystemPyPI",
                "EcosystemRubyGems",
                "EcosystemCratesIO",
                "EcosystemPackagist",
                "EcosystemMaven",
                "EcosystemNuGet",
                "EcosystemLinux",
                "EcosystemDebian",
                "EcosystemAlpine",
                "EcosystemHex",
                "EcosystemAndroid",
                "EcosystemGitHubActions",
                "EcosystemPub",
                "EcosystemConanCenter",
                "EcosystemRockyLinux",
                "EcosystemAlmaLinux",
                "EcosystemBitnami",
                "EcosystemPhotonOS",
                "EcosystemCRAN",
                "EcosystemBioconductor",
                "EcosystemSwiftURL"
            ]
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "fixed": {
                    "type": "string"
                },
                "introduced": {
                    "type": "string"
                },
                "last_affected": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                }
            }
        },
        "models.GroupInfo": {
            "type": "object",
            "properties": {
                "aliases": {
                    "description": "Aliases include all aliases and IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "experimentalAnalysis": {
                    "description": "Map of Vulnerability IDs to AnalysisInfo",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.AnalysisInfo"
                    }
                },
                "ids": {
                    "description": "IDs expected to be sorted in alphanumeric order",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_severity": {
                    "type": "string"
                }
            }
        },
        "models.Package": {
            "type": "object",
            "properties": {
                "ecosystem": {
                    "$ref": "#/definitions/models.Ecosystem"
                },
                "name": {
                    "type": "string"
                },
                "purl": {
                    "type": "string"
                }
            }
        },
        "models.PackageInfo": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "string"
                },
                "ecosystem": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.PackageSource": {
            "type": "object",
            "properties": {
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PackageVulns"
                    }
                },
                "source": {
                    "$ref": "#/definitions/models.SourceInfo"
                }
            }
        },
        "models.PackageVulns": {
            "type": "object",
            "properties": {
                "dependency_groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GroupInfo"
                    }
                },
                "license_violations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "licenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "package": {
                    "$ref": "#/definitions/models.PackageInfo"
                },
                "vulnerabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vulnerability"
                    }
                }
            }
        },
        "models.Range": {
            "type": "object",
            "properties": {
                "database_specific": {
                    "type": "object",
                    "additionalProperties": true
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Event"
                    }
                },
                "repo": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.RangeType"
                }
            }
        },
        "models.RangeType": {
            "type": "string",
            "enum": [
                "SEMVER",
                "ECOSYSTEM",
                "GIT"
            ],
            "x-enum-varnames": [
                "RangeSemVer",
                "RangeEcosystem",
                "RangeGit"
            ]
        },
        "models.Reference": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Severity": {
            "type": "object",
            "properties": {
                "score": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.SeverityType"
                }
            }
        },
        "models.SeverityType": {
            "type": "string",
            "enum": [
                "CVSS_V2",
                "CVSS_V3",
                "CVSS_V4"
            ],
            "x-enum-varnames": [
                "SeverityCVSSV2",
                "SeverityCVSSV3",
                "SeverityCVSSV4"
            ]
        },
        "models.SourceInfo": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Vulnerability": {
            "type": "object",
            "properties": {
                "affected": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Affected"
                    }
                },
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "credits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Credit"
                    }
                },
                "database_specific": {
                    "type": "object",
                    "additionalProperties": true
                },
                "details": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "published": {
                    "type": "string"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Reference"
                    }
                },
                "related": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "schema_version": {
                    "type": "string"
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Severity"
                    }
                },
                "summary": {
                    "type": "string"
                },
                "withdrawn": {
                    "type": "string"
                }
            }
        },
        "models.VulnerabilityResults": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PackageSource"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:1323",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "WebScan Worker API",
	Description:      "Этот сервис ищет lock-файлы в git-репозитории и возвращает список уязвимостей из базы данных osv.dev.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
